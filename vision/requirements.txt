sudo apt update
sudo apt upgrade
sudo apt install python3-pip
pip install PySide6


sudo apt-get install python3.8-venv
python3.8 -m venv env3.8
source env3.8/bin/activate

sudo update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.8 1

sudo update-alternatives --config python3

echo "alias python=/usr/bin/python3" >> ~/.bashrc
echo "alias pip=/usr/bin/pip3" >> ~/.bashrc

source ~/.bashrc 


# update python version:
https://cloudbytes.dev/snippets/upgrade-python-to-latest-version-on-ubuntu-linux


# download pyside source_code:

https://download.qt.io/official_releases/qt/6.6/6.6.0/single/

# use pyside6.4.0
curl -O -L https://download.qt.io/archive/qt/6.4/6.4.0/single/qt-everywhere-src-6.4.0.tar.xz



# build from source code(arch linux):
https://doc.qt.io/qt-6/linux-building.html


# build from source code(jetson orin)
https://bugreports.qt.io/browse/PYSIDE-2156?gerritIssueStatus=All


# csdn about jetson nano install by source code:
https://blog.csdn.net/OTZ_2333/article/details/129618756

https://gitlab.com/-/snippets/2432339


# cmake github
https://github.com/Kitware/CMake/tree/v3.24.4

https://askubuntu.com/questions/1126893/how-to-install-openssl-1-1-1-and-libssl-package

Error:
-- Looking for gethostname - found
-- Could NOT find OpenSSL, try to set the path to OpenSSL root folder in the system variable OPENSSL_ROOT_DIR (missing: OPENSSL_CRYPTO_LIBRARY OPENSSL_INCLUDE_DIR) 
CMake Error at Utilities/cmcurl/CMakeLists.txt:591 (message):
  Could not find OpenSSL.  Install an OpenSSL development package or
  configure CMake with -DCMAKE_USE_OPENSSL=OFF to build without OpenSSL.


# install cmake(make sure install openssl first)
./bootstrap && make && sudo make install

# check cmake version:
cmake --version

# use command to install openssl:
sudo apt install libssl-dev

# to find where is the openssl:
openssl version -d
OPENSSLDIR: "/usr/lib/ssl"

# install gcc 8.5.0
https://mirrors.ustc.edu.cn/gnu/gcc/gcc-8.5.0/

# command:
sudo apt-get install gcc-8 g++-8

# gcc-8.5
./contrib/download_prerequisites
mkdir build && cd build
../configure -enable-checking=release -enable-languages=c,c++ -disable-multilib
make -j2
sudo make install

sudo update-alternatives --install /usr/bin/gcc gcc /usr/local/bin/gcc-8.5 1
sudo update-alternatives --install /usr/bin/g++ g++ /usr/local/bin/g++-8.5 1



# set default gcc version:
sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 800 --slave /usr/bin/g++ g++ /usr/bin/g++-8

# no need this command
sudo update-alternatives --config gcc

# check gcc version:
gcc --version

# install clang 
# reference https://blog.csdn.net/OTZ_2333/article/details/129618756
git clone -b llvmorg-15.0.7 --depth=1 https://github.com/llvm/llvm-project.git
cd llvm-project
mkdir build
cd build
# cmake -DLLVM_ENABLE_PROJECTS=clang -DCMAKE_BUILD_TYPE=Release -G "Unix Makefiles" ../llvm
cmake -DLLVM_ENABLE_PROJECTS=clang -DCMAKE_BUILD_TYPE=Release -DLLVM_ENABLE_RTTI=ON -DLLVM_ENABLE_EH=ON -G "Unix Makefiles" ../llvm
make -j4
sudo make install


# install dependences of qt
sudo apt install -y \
  build-essential \
  curl \
  git \
  libfontconfig-dev \
  libfreetype-dev \
  libglib2.0-dev \
  libgl-dev \
  libgl1-mesa-dev \
  libice-dev \
  libsm-dev \
  libssl-dev \
  libx11-dev \
  libx11-xcb-dev \
  libxcb1-dev \
  libxcb-glx0-dev \
  libxcb-icccm4-dev \
  libxcb-image0-dev \
  libxcb-xinput-dev \
  libxcb-keysyms1-dev \
  libxcb-randr0-dev \
  libxcb-render-util0-dev \
  libxcb-render0-dev \
  libxcb-shape0-dev \
  libxcb-shm0-dev \
  libxcb-sync-dev \
  libxcb-util-dev \
  libxcb-xfixes0-dev \
  libxcb-xinerama0-dev \
  libxcb-xinput-dev \
  libxcb-xkb-dev \
  libxext-dev \
  libxfixes-dev \
  libxi-dev \
  libxkbcommon-dev \
  libxkbcommon-x11-dev \
  libxrender-dev \
  ninja-build


# download freetype deb package
https://launchpad.net/ubuntu/+source/freetype/2.8.1-2ubuntu2/+build/14754425


# configure qt:
cd qt-everywhere-6.5.3
mkdir build
cd build
dos2unix ../configure
dos2unix ../qtbase/configure
../configure -feature-xcb -skip qt3d -skip qtquick3 -skip qtquick3dphysiscs -skip qtvirtualkeyboard -skip qtsensors

cmake --build . --parallel 2
sudo cmake --install .


# when complie has Error
https://codereview.qt-project.org/c/qt/qttools/+/436135

# dos2unix
find . -type f -exec dos2unix {} \;

# install pyside-setup
git clone https://code.qt.io/pyside/pyside-setup
cd pyside-setup
git checkout 6.4
python -m pip install -r requirements.txt
python setup.py build --qtpaths=/usr/local/Qt-6.4.3/bin/qtpaths --ignore-git --parallel 4 --standalone


# pyinstaller complie wheel has problem.
# need to download pyinstaller
git clone https://github.com/pyinstaller/pyinstaller

cd pyinstaller, then cd bootloader

Run python3 ./waf distclean all to build the bootloader for your system.

then cd pyinstaller  then  pip install .

at last you need to copy strip
cd /usr/local/bin
sudo cp /usr/bin/strip .


sudo apt update
sudo apt install gcc-9 g++-9

# download url:
https://launchpad.net/~ubuntu-toolchain-r/+archive/ubuntu/test


# setup gcc-9
# use python3.8 error, change it back to 3.6

sudo update-alternatives --config python3    
sudo add-apt-repository ppa:ubuntu-toolchain-r/test
sudo apt install gcc-9
sudo apt install g++-9

# select the default gcc version
sudo update-alternatives --config gcc    

#after upgrade to gcc9, then I can solve transform_reduce is not a namespace std issue.

